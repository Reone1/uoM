(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{326:function(s,t,a){"use strict";a.r(t);var e=a(14),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"docker-compose를-이용해-storybook-dev-server-배포기"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose를-이용해-storybook-dev-server-배포기"}},[s._v("#")]),s._v(" Docker Compose를 이용해 Storybook, dev Server 배포기")]),s._v(" "),t("h2",{attrs:{id:"목적"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#목적"}},[s._v("#")]),s._v(" 목적")]),s._v(" "),t("blockquote",[t("p",[s._v("프로젝트를 진행하면서 dev Server를 운용하고 해당 서버에서 직접적으로 storybook을 document를 확인할 수 있는 domain이 필요하다.")])]),s._v(" "),t("h2",{attrs:{id:"docker-compose는-어떤-역할을-하는가"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose는-어떤-역할을-하는가"}},[s._v("#")]),s._v(" docker-compose는 어떤 역할을 하는가")]),s._v(" "),t("p",[s._v("이 글은 docker의 사용법에서는 다루지 않고 docker-compose의 역할과 사용기에 대해서만 기술합니다.")]),s._v(" "),t("h3",{attrs:{id:"공식문서-기술"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#공식문서-기술"}},[s._v("#")]),s._v(" 공식문서 기술")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://docs.docker.com/compose/",target:"_blank",rel:"noopener noreferrer"}},[s._v("docker-compose 공식문서"),t("OutboundLink")],1)]),s._v(" "),t("blockquote",[t("p",[s._v("Compose is a tool for defining and running multi-container Docker applications.\ndocker-compose는 멀티 컨테이너 도커 어플리케이션을 정의하고 실행하는 도구 입니다.")])]),s._v(" "),t("p",[s._v("설명과 같이 docker는 여러개의 컨테이너 환경을 독립적으로 실행하고 전체 환경을 어플리케이션으로 구성할 수 있도록 정의하고 실행해주는 docker command입니다.")]),s._v(" "),t("p",[s._v("때문에, 독립적인 Container가 연관이 없다면 따로 Dockerfile을 생성하고 각각 빌드하여 어플리케이션을 실행할 수도 있습니다.")]),s._v(" "),t("p",[t("strong",[s._v("하지만 서로 의존성이 있는 서비스라면 (redis, DB, 등)실행 환경등을 한군데서 관리하고 실행시에 일괄적으로 관리할 수 있다는 점이 큰 이점입니다.")])]),s._v(" "),t("h3",{attrs:{id:"compose-예시"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#compose-예시"}},[s._v("#")]),s._v(" compose 예시")]),s._v(" "),t("p",[s._v("다음은 공식문서에 있는 "),t("code",[s._v("docker-compose.yml")]),s._v("파일의 예시 코드입니다.")]),s._v(" "),t("div",{staticClass:"language-yml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3.9"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# optional since v1.27.0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("web")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" .\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"5000:5000"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" ."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/code\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" logvolume01"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/var/log\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("links")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" redis "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 의존성 서비스 연결")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("redis")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" redis\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("logvolume01")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("위 코드처럼 내가 만든 서비스에 대한 실행환경을 인자로 념겨 실행하고, "),t("code",[s._v("links")]),s._v("를 통해 의존성 서비스 연결을 시도할 수 있습니다.")]),s._v(" "),t("p",[s._v("이후 "),t("code",[s._v("services")]),s._v("의 "),t("code",[s._v("redis")]),s._v("를 통해서 다음 컨테이너 실행을 정의 합니다.")]),s._v(" "),t("p",[t("code",[s._v("redis service")]),s._v("에서 볼 수 있듯이 특정 "),t("code",[s._v("image")]),s._v("를 실행하는 방식으로도 docker-compose sevice를 생성할 수 있습니다.")]),s._v(" "),t("h2",{attrs:{id:"코드"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#코드"}},[s._v("#")]),s._v(" 코드")]),s._v(" "),t("p",[s._v("제가 구현한 방식을 간단하게 설명하고 마무리 하도록 하겠습니다.\n저는 Dockerfile을 다음과 같이 구성하였습니다.")]),s._v(" "),t("ol",[t("li",[s._v("dependency 설치")]),s._v(" "),t("li",[s._v("service app build")]),s._v(" "),t("li",[s._v("storybook build")]),s._v(" "),t("li",[s._v("Copy directory")])]),s._v(" "),t("div",{staticClass:"language-docker extra-class"},[t("pre",{pre:!0,attrs:{class:"language-docker"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Dockerfile")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" node:alpine "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" deps")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" apk add --no-cache libc6-compat")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /app")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" package*.json ./")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm install next@canary # nextjs swc에러로 인한 canery version 설치")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm install --frozen-lockfile")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" node:alpine "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" builder")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /app")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" . .")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token options"}},[t("span",{pre:!0,attrs:{class:"token property"}},[s._v("--from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("deps")])]),s._v(" /app/node_modules ./node_modules")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" export NODE_OPTIONS=--openssl-legacy-provider; NODE_OPTIONS=--max-old-space-size=2000 npm run build && npm install --ignore-scripts --prefer-offline ## 메모리 부족으로 build가 실패하는 경우가 있어 memory사용을 늘려 줌")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" export NODE_OPTIONS=--openssl-legacy-provider; npm run build-storybook # storybook build")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Production image, copy all the files and run next")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" node:alpine "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" runner # 배포 환경 구성")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" mkdir -p storybook")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token options"}},[t("span",{pre:!0,attrs:{class:"token property"}},[s._v("--from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("builder")])]),s._v(" /app/storybook-static/ /storybook/")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token options"}},[t("span",{pre:!0,attrs:{class:"token property"}},[s._v("--from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("builder")])]),s._v(" /app/next.config.js ./app/")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token options"}},[t("span",{pre:!0,attrs:{class:"token property"}},[s._v("--from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("builder")])]),s._v(" /app/public ./app/public/")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token options"}},[t("span",{pre:!0,attrs:{class:"token property"}},[s._v("--from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("builder")])]),s._v(" /app/.next ./app/.next")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token options"}},[t("span",{pre:!0,attrs:{class:"token property"}},[s._v("--from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("builder")])]),s._v(" /app/node_modules ./app/node_modules")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token options"}},[t("span",{pre:!0,attrs:{class:"token property"}},[s._v("--from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("builder")])]),s._v(" /app/package.json ./app/")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 이후 ENV등의 docker 환경 설정")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" PORT 3000")]),s._v("\n")])])]),t("p",[s._v("Dockerfile에서는 "),t("code",[s._v("CMD")]),s._v("를 작성하지 않는 방식으로 외부에서 Command를 주입하도록 설정했습니다.\n"),t("code",[s._v("docker-compose.yml")]),s._v("을 통해 command를 주입하며, "),t("code",[s._v("working-dir")]),s._v("을 변경하는 방식으로 두 개의 프로젝트 폴더 root를 분리하여 구성하였습니다.")]),s._v(" "),t("p",[s._v("이후 docker-compose를 통한 deploy를 진행합니다.")]),s._v(" "),t("div",{staticClass:"language-yml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mydockerid/mydockerimage\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("working_dir")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" /app\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("command")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" sh "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v('c "npm run start"\n  '),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("storybook")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mydockerid/mydockerimage\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("working_dir")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" /storybook\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("command")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" sh "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v('c "npx http'),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("start .\n")])])]),t("p",[s._v("이처럼 볼륨 없이 구성하였으며, 외부 볼륨은 현재 개발 버전에서는 사용하지 않을 예정입니다.\nDockerfile을 통한 prebuild만을 진행하고 compose를 통한 통합 배포를 하도록 설정하였으며,")]),s._v(" "),t("p",[s._v("Dockerfile을 통한 build구성은 github-actions를 통해 test를 통과하면 일괄적으로 할 수 있도록 설정했습니다.")]),s._v(" "),t("h2",{attrs:{id:"결론"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#결론"}},[s._v("#")]),s._v(" 결론")]),s._v(" "),t("p",[s._v("compose는 이밖에도 up,down을 통한 자동 container 재생성을 지원하고 있습니다. down으로 현재 compose를 종료하는 경우 live된 conatainer를 종료하고 바로 제거합니다.")]),s._v(" "),t("p",[s._v("이후 up을 통해 다시 생성하는 경우 build를 진행하고 run하는 과정까지 일괄적으로 진행합니다.")]),s._v(" "),t("p",[s._v("docker-compose.yml을 잘 활요할 수 있다면, github-actions를 통해 자동화 하는 것도 하나의 방법이 될 수 있을것 같습니다.")]),s._v(" "),t("ul",[t("li",[s._v("github-actions를 통해 secret으로 값을 전달 -> "),t("code",[s._v("docker-compose.yml")]),s._v(" 파일을 생성 -> 생성된 yml파일을 통한 compose build 및 배포")])]),s._v(" "),t("p",[s._v("이러한 순서의 배포를 취하는 것이 보안상 가장 안전해 보입니다.")])])}),[],!1,null,null,null);t.default=n.exports}}]);