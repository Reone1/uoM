(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{281:function(s,t,a){s.exports=a.p+"assets/img/reposetting.29919706.png"},282:function(s,t,a){s.exports=a.p+"assets/img/actions.942e32c1.png"},324:function(s,t,a){"use strict";a.r(t);var n=a(14),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"cypress를-이용한-ci-구성"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cypress를-이용한-ci-구성"}},[s._v("#")]),s._v(" Cypress를 이용한 CI 구성")]),s._v(" "),t("h2",{attrs:{id:"cypress는-무엇인가"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cypress는-무엇인가"}},[s._v("#")]),s._v(" Cypress는 무엇인가? ❓")]),s._v(" "),t("p",[t("code",[s._v("cypress")]),s._v("는 FrontEnd, E2E (End To End) 테스팅 library이다."),t("br"),s._v("\nSelenium과는 다른 e2e테스팅 툴로서 nodejs 서버를 기반으로 구동됩니다."),t("br"),s._v(" "),t("code",[s._v("chrome")]),s._v(", "),t("code",[s._v("firefox")]),s._v(", "),t("code",[s._v("electron")]),s._v(", "),t("code",[s._v("edge")]),s._v(", "),t("code",[s._v("brave")]),s._v(" 브라우저 환경에 맞추어 e2e 테스트를 진행해 볼 수 있습니다.")]),s._v(" "),t("p",[s._v("nodejs를 기반으로 구동하면서 nodejs process와 완벽히 sync하여 움직입니다.")]),s._v(" "),t("p",[s._v("network layer에 접근하여 network요청을 직접 조작하는 것 또한 가능합니다.\n이를 통해서 항상 일관된 결과를 확인하는 테스트를 작성하는게 가능합니다.")]),s._v(" "),t("p",[s._v("core concept과 diffrence는 공식 문서에도 잘 정리되어 있습니다. 📚"),t("br"),s._v("\n🔗 "),t("a",{attrs:{href:"https://docs.cypress.io/guides/overview/key-differences#Architecture",target:"_blank",rel:"noopener noreferrer"}},[s._v("Cypress's key Diffrences"),t("OutboundLink")],1)]),s._v(" "),t("h2",{attrs:{id:"cypress를-왜-사용하는가-🤔"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cypress를-왜-사용하는가-🤔"}},[s._v("#")]),s._v(" Cypress를 왜 사용하는가? 🤔")]),s._v(" "),t("p",[s._v("CI에 적용하기 위한 Testing library가 필요한게 핵심이었습니다.\n테스트 로그를 통해 실패 케이스와 성공 케이스를 구분하는 것은 쉬운 일이었으나, github과 연동하여 해당 데이터를 쉽게 표시할 수 있는 library가 있으면 우선 선택할 계획이었습니다.")]),s._v(" "),t("p",[s._v("여러가지 testing library를 조사한 결과 다음과 같은 이유로 Cypress를 선택하게 되었습니다.")]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("dashBoard를 통한 monitoring")]),t("br"),s._v("\ncpyress는 "),t("code",[s._v("record")]),s._v("기능을 사용하면 dashboard에 testing기록을 남겨두게 됩니다. 이는 Component test(unit test), E2E (integration test) 모두 사용할 수 있습니다.")]),s._v(" "),t("li",[t("strong",[s._v("github actions을 지원합니다.")]),t("br"),s._v("\nCypress는 자체 개발한 cypress/gihub-actions를 가지고 있고 해당 기능을 통해 쉽게 actions를 이용할 수 있습니다.")]),s._v(" "),t("li",[t("strong",[s._v("E2E, Unit 테스트를 모두 쉽게 구현할 수 있습니다.")]),t("br"),s._v("\nCypress를 사용하는 core concept은 E2E testing 입니다."),t("br"),s._v("\n하지만 우리는 개발을 하면서 unit test를 진행할 필요성이 있었습니다."),t("br"),s._v("\ncypress의 component test를 이용하면 unit test를 구성할 수 있었습니다. 그리고, 두 가지를 다르게 설정하여 필요한 테스트를 원하는 시점에 진행할 수 있었습니다.")]),s._v(" "),t("li",[t("strong",[s._v("react-testing-library와 호환됩니다.")]),s._v("\n이 밖에도 cypress는 react-testing-library에도 third-party모듈로 들어가 있어 creact-testing-library와 같이 호환하여 사용 할 수 있습니다.\n이를 통해 chai, jest, mocha등의 사용법을 같이 사용하는 것도 가능합니다.\n이러한 이점은 기존에 사용하였던 테스팅 방식인 mocha, chai, enzyme을 사용한 component 테스팅을 그대로 가져와 구성할 수 있게 해주었습니다.\n이로서 낮은 learning curve를 가져갈 수 있다는 이득이 있었습니다.")])]),s._v(" "),t("h2",{attrs:{id:"cypress-dashboard-사용하기"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cypress-dashboard-사용하기"}},[s._v("#")]),s._v(" Cypress Dashboard 사용하기")]),s._v(" "),t("p",[s._v("cypress의 dashboard는 공식 문서에도 나와 있습니다.")]),s._v(" "),t("p",[s._v("🔗 "),t("a",{attrs:{href:"https://docs.cypress.io/guides/dashboard/introduction#Integrate-with-Slack",target:"_blank",rel:"noopener noreferrer"}},[s._v("How to use DashBoard"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("먼저 cypress를 local에 설치합니다."),t("br"),s._v("\n설치는 가이드를 통해 진행할 수 있습니다. 🔗 "),t("a",{attrs:{href:"https://docs.cypress.io/guides/getting-started/installing-cypress",target:"_blank",rel:"noopener noreferrer"}},[s._v("가이드"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("npm을 사용하고 계시다면 다음과 같은 방법으로 설치할 수 있습니다.")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("   $ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /your/project/path\n   $ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" i cypress "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-D")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ues npm")]),s._v("\n   $ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("yarn")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" cypress "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--dev")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# use yarn")]),s._v("\n")])])]),t("p",[s._v("간단한 테스트 코드를 작성해봅니다.")]),s._v(" "),t("div",{staticClass:"language-jsx extra-class"},[t("pre",{pre:!0,attrs:{class:"language-jsx"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" mount "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@cypress/react"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" Test "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("div")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token plain-text"}},[s._v("Hello World!")]),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("div")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("describe")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello World Test"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("it")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Test Component"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("/>")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    cy"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"div"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("should")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"contains"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello World!"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("해당 테스트는 성공하는 테스트케이스 입니다."),t("br"),s._v("\n해당 코드를 cypresss itegration 폴더에 생성합니다.")]),s._v(" "),t("p",[s._v("cypress run-ct를 통해 component test를 진행할 수 있습니다. 특정 spec파일을 사용하려면 "),t("code",[s._v("-s")]),s._v(" 옵션을 통해서 해당 스펙 파일을 실행 할 수 있습니다.")]),s._v(" "),t("p",[t("strong",[s._v("cypress dashboard에 가입하기")]),s._v("\n🔗 "),t("a",{attrs:{href:"https://www.cypress.io/dashboard/",target:"_blank",rel:"noopener noreferrer"}},[s._v("cypress dashboard 바로가기"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("cypress dashboard는 cypressio에 회원가입하는 방식으로 사용 가능합니다.\norganiztion을 생성하여 팀과 함께 사용하는 방식으로 사용할 수 있습니다.")]),s._v(" "),t("ol",[t("li",[s._v("organiation을 생성해줍니다.")]),s._v(" "),t("li",[s._v("cypress app을 git과 연동해 줍니다. (optional)")]),s._v(" "),t("li",[s._v("project를 생성합니다.")]),s._v(" "),t("li",[s._v("github actions를 통해 cypress test를 진행합니다.")])]),s._v(" "),t("p",[s._v("2번 단계는 꼭 진행하지 않아도 상관 없으나, 이후 comment를 자동으로 남기기 위해 진행할 필요가 있습니다.")]),s._v(" "),t("p",[s._v("project는 integration의 설정을 변경하는데 사용합니다.")]),s._v(" "),t("p",[s._v("최초 1회는 메인으로 사용할 브랜치에서 로컬 테스틀 돌려 branch를 등록하는게 좋습니다.\n이후에도 cypress dashboard settting에서 접근하기 쉽도록 도와줍니다.")]),s._v(" "),t("p",[s._v("github과 연동하기 위해 레포에 등록합니다."),t("br"),s._v("\n다음 과정에 따라 github cypress app을 내 repository에 등록하여 사용할수 있습니다.\nhttps://docs.cypress.io/guides/dashboard/github-integration#Install-via-project-settings")]),s._v(" "),t("p",[t("img",{attrs:{src:a(281),alt:"repo 설정"}}),s._v("\n다음 화면에서 내가 cypress CI를 사용할 "),t("code",[s._v("레포지토리")]),s._v("를 선택합니다.")]),s._v(" "),t("p",[s._v("project setting을 통해 레포지토리 정책을 정할 수 있습니다. 다만, 최초 프로젝트 등록시에는 레코딩 테스트를 1회 진행해야 합니다.")]),s._v(" "),t("p",[t("code",[s._v("cypress.json")]),s._v("에 "),t("code",[s._v('"projectId"')]),s._v("를 등록하고 record key를 통해 recording을 진행할 수 있습니다.\n정상적으로 내 프로젝트 폴더에 cypress를 설치했다면, cypress.json이 자동적으로 생성되어 있습니다.")]),s._v(" "),t("p",[s._v("생성한 프로젝트 Id를 cypress.json에 설정한 뒤,"),t("br"),s._v("\n레코딩 테스트를 진행하면")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ npx cypress run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--record")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-k")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("record-key"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),t("p",[s._v("dashboard에테스팅 결과가 나타나는 것을 알 수 있습니다."),t("br"),s._v("\n이를 통해 프로젝트를 활성화 하면 이후에 설정등을 통해 CI에 적용할 수 있습니다.")]),s._v(" "),t("h2",{attrs:{id:"github-actions-사용하기"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#github-actions-사용하기"}},[s._v("#")]),s._v(" Github actions 사용하기")]),s._v(" "),t("p",[s._v("다음으로 actions를 통해 dashboard에 레코딩을 자동으로 남기도록 설정하는 방법입니다.")]),s._v(" "),t("p",[s._v("Cypress는 "),t("code",[s._v("github-actions")]),s._v("이외에도 circle CI등의 여러가지 CI용 툴에 적용할 수 있도록 가이드를 제공하고 있습니다.")]),s._v(" "),t("p",[s._v("해당 내용은 공식문서에 더 자세히 나와있습니다.")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://docs.cypress.io/guides/continuous-integration/github-actions",target:"_blank",rel:"noopener noreferrer"}},[s._v("공식문서 참고"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("actions에 등록하기 위해 workflow파일을 생성하여 추가합니다.")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("   $ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("touch")]),s._v(" .github/workflow/main.yml\n")])])]),t("p",[s._v("github의 프로젝트 레포지토리 > actions에서도 생성 가능합니다.")]),s._v(" "),t("p",[t("img",{attrs:{src:a(282),alt:"actions"}})]),s._v(" "),t("p",[s._v("해당 workflow를 통해 다음과 같은 실행을 요청할 수 있습니다.")]),s._v(" "),t("ul",[t("li",[s._v("project build")]),s._v(" "),t("li",[s._v("project start (production setting)")]),s._v(" "),t("li",[s._v("testing cypress")])]),s._v(" "),t("div",{staticClass:"language-yml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Cypress Tests\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("on")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("push"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("jobs")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cypress-run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("runs-on")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ubuntu"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("latest\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("steps")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Checkout\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("uses")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" actions/checkout@v2\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Install NPM dependencies, cache them correctly")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# and run all Cypress tests")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Cypress run\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("uses")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" cypress"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("io/github"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("action@v2\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("with")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" npm run build\n          "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("start")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" npm start\n")])])]),t("p",[t("code",[s._v("uses")]),s._v("를 통해 "),t("code",[s._v("cypress/github-actions")]),s._v(" 모듈을 사용하고 있음을 알수 있습니다.")]),s._v(" "),t("p",[s._v("이는 workflow상에서 cypress를 통한 테스트를 진행할 수 있게 돕는 하나의 workflow파일이라고 생각하면 좋습니다.")]),s._v(" "),t("p",[s._v("with는 해당 모듈의 인풋을 설정하는 방식으로,"),t("br"),s._v(" "),t("code",[s._v("build")]),s._v("에 해당되는 스크립트와 "),t("code",[s._v("npm run build")]),t("br"),s._v(" "),t("code",[s._v("start")]),s._v("에 해당되는 스크립트를 실행하고 "),t("code",[s._v("npm start")]),t("br"),s._v(" "),t("code",[s._v("cypress run")]),s._v("을 실행하게 됩니다.")]),s._v(" "),t("p",[t("code",[s._v("cypress run")]),s._v("과 같은 경우는 기본적인 E2E테스트를 진행합니다.\ncomponent 테스트를 위해서는 다른 설정이 필요합니다.")]),s._v(" "),t("p",[t("code",[s._v("command")]),s._v(" input을 통해 내가 원하는 유형의 테스트 스크립트를 실행하게 할 수 있습니다.")]),s._v(" "),t("div",{staticClass:"language-yml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("command")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" `npm run cypress"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("run"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("ct "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("record "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("b chrome "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("k $"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" secrets.CYPRESS_RECORD_KEY"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[t("code",[s._v("--")]),s._v("를 사용하면 스크립트 실행에 필요한 option값을 전달할 수 있습니다."),t("br"),s._v("\ncommand를 통해 cypress run-ct를 동작하게 됩니다.")]),s._v(" "),t("p",[s._v("이는 "),t("code",[s._v("package.json")]),s._v("에 반드시 스크립트로 등록되어있어야 실행 할 수 있습니다.")]),s._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// package.json")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"script"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"cypress:run-ct"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cypress run-ct"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("테스트 코드 실행 결과를 dashboard를 통해 확인하고 에러 상태를 github에서도 확인할 수 있습니다.")]),s._v(" "),t("h2",{attrs:{id:"conclusion"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#conclusion"}},[s._v("#")]),s._v(" Conclusion")]),s._v(" "),t("p",[s._v("Cypress는 프론트엔드에서 사용하기에 효과적인 테스팅 라이브러리 입니다.\n서비스를 운영함에 있어서 E2E test는 사용자의 경험을 확인하는 큰 역할을 하고 있기 때문입니다.")]),s._v(" "),t("p",[s._v("또한, 개발을 진행함에 있어서 Unit test를 구성하고 개발에 반영하는게 통일성 있는 기능을 관리하는데 큰 기여를 할 수 있습니다.")]),s._v(" "),t("p",[s._v("TDD를 진행하는데 있어서 Cypress를 사용하는 것도 하나의 좋은 방법입니다.")])])}),[],!1,null,null,null);t.default=e.exports}}]);