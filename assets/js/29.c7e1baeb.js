(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{327:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"github-actions으로-배포-자동화-하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#github-actions으로-배포-자동화-하기"}},[t._v("#")]),t._v(" Github Actions으로 배포 자동화 하기")]),t._v(" "),s("blockquote",[s("p",[t._v("github actions는 public repository는 actions를 더 자유롭게 사용할 수 있습니다. 무료로 제공하고, private repository는 2000분/월 무료 시간을 주고, 추가 분에 대해 0.008$를 분단 추가 과금하게 되어있습니다. 회사 계정에서 큰 요금제의 회원을 사용한다면 달라질 수 있습니다.")])]),t._v(" "),s("p",[t._v("git repository에서 "),s("code",[t._v("actions")]),t._v("라는 탭을 이용해 간단한게, actions를 이용해 볼 수 있습니다.")]),t._v(" "),s("p",[s("code",[t._v("yml")]),t._v("형식의 파일을 작성해 workflow를 작성할 수 있고,"),s("br"),t._v("\n여러 workflow를 작성해 pipeline형식으로 실행하는 것도 가능합니다.")]),t._v(" "),s("h2",{attrs:{id:"actions-initialize"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#actions-initialize"}},[t._v("#")]),t._v(" Actions initialize")]),t._v(" "),s("p",[t._v("초기 세팅되어 있는 actions를 살펴보면, 현재 레포지토리에 push 되었을 때, actions log에 "),s("code",[t._v("hello world")]),t._v("를 출력하는 기능을 하고 있습니다.\n여기서 살펴볼 수 있는점은, "),s("code",[t._v("job")]),t._v("의 형태로 각 로직을 분리하고 구동 환경을 설정할 수 있습니다. 현재는 ubuntu-latest를 사용하고, "),s("code",[t._v("name")]),t._v("을 기준으로한 "),s("code",[t._v("step")]),t._v("을 사용하여 각 jobs에서 순차적으로 이루어져야 할 일을 나눌 수 있습니다.")]),t._v(" "),s("blockquote",[s("p",[t._v("workflow > yml file > job > step의 형식으로 되어있다고 볼 수 있습니다.")])]),t._v(" "),s("h2",{attrs:{id:"ci-cd-적용하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ci-cd-적용하기"}},[t._v("#")]),t._v(" CI/CD 적용하기")]),t._v(" "),s("p",[t._v("일단 docker를 이용해 build파일을 image로 생성 server에 접속해 docker cotainer를 변경하는 방식으로 지속적인 배포를 하기로 기획했다.")]),t._v(" "),s("p",[t._v("가정")]),t._v(" "),s("ol",[s("li",[t._v("pull request가 생성되는 경우 cypress를 통해 테스트를 진행한다. (unit test)")]),t._v(" "),s("li",[t._v("테스트가 성공하면 해당 pr의 issue number를 가지고 docker를 빌드 한다.")]),t._v(" "),s("li",[t._v("pull request가 dev에 merge되면 서버에 배포한다.")]),t._v(" "),s("li",[t._v("release를 위해 dev에서 release branch에 pull request를 요청한다.")]),t._v(" "),s("li",[t._v("e2e 테스트를 진행한다. 테스트가 통과하면 merge를 허가한다.")]),t._v(" "),s("li",[t._v("release branch에 merge되는 경우에는 production 환경의 image를 배포 서버에 올린다.")])]),t._v(" "),s("p",[t._v("위와 같은 설정을 진행하기 위한 단계벌 실행을 해볼 계획이다.")]),t._v(" "),s("p",[t._v("일단 첫 번째인 pull Request가 발생하면 cypress통해 테스트를 진행한다.")]),t._v(" "),s("h2",{attrs:{id:"cypress는-무엇인가"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cypress는-무엇인가"}},[t._v("#")]),t._v(" Cypress는 무엇인가?")]),t._v(" "),s("p",[t._v("front end에서 e2e테스트를 위해 사용하는 라이브러리로 react-testing-library에 확장 모듈로도 사용할 수 있고 단독으로도 사용할 수 있다.\n기본적으로 e2e (end-to-end)테스트를 위해 만들어진 라이브러리이기 때문에, 라이브 서버를 대상으로 테스트를 진행하는게 추천 방식이다.")]),t._v(" "),s("p",[t._v("하지만, 개발 과정에서 실제 라이브서버를 통해 테스트를 하는 경우는 많지 않고 local환경에서의 테스트를 진행해야 하기 때문에, component단위 테스틀 진행해야 한다.\n유닛 테스트는 component-test를 통해 구현할 수 있으며, enzyme등을 사용해 component를 mocking하는 것과 같은 방식으로 cypress를 사용할 수 있다.")]),t._v(" "),s("p",[t._v("테스트용 dev server 없이도 구동이 가능하며, record 기능을 통해 해당 컴포넌트를 웹상에서 어떻게 작동하는지도 확인해 볼수 있다.")]),t._v(" "),s("p",[t._v("cypress는 "),s("code",[t._v("cypress-io/github-actions@v2")]),t._v("를 통해 github workflow에서 모듈 형태로 불러와 사용할 수 있으며,")]),t._v(" "),s("p",[t._v("현재 배포 전략에서는 dev버전 테스트와 release 버전 테스트를 다르게 구성해야 한다.")]),t._v(" "),s("p",[s("strong",[t._v("배포 전략에 따른 테스트 진행")])]),t._v(" "),s("ul",[s("li",[t._v("dev => unit test (component test)")]),t._v(" "),s("li",[t._v("release => e2e test (with server)")])]),t._v(" "),s("h2",{attrs:{id:"github-actions-setting"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#github-actions-setting"}},[t._v("#")]),t._v(" github actions Setting")]),t._v(" "),s("p",[t._v("github에서 repository를 생성하고 actions 탭으로 workflow를 생성할 수 있다.\nmarket place에서 이미 생성된 많은 workflow를 참조해 사용할 수 있다.")]),t._v(" "),s("p",[s("strong",[t._v("actions을 통해 cypress test를 진행하기")])]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PR Test\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pull_request")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branches")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("dev"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cypress_run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# checkout")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" checkout\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/checkout@v2\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cypress run")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Cypress Components test\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cypress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("io/github"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("action@v2\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" npm run test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("cypress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ct "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.CYPRESS_RECORD_KEY "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("t $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" github.event_name "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# package.json script => "test:cypress-ct": cypress run-ct -b chrome --record -k')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("COMMIT_INFO_MESSAGE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" github.event.pull_request.title "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("다음과 같은 workflow를 통해서 cypress 테스트를 진행할 수 있다.")]),t._v(" "),s("p",[t._v("checkout을 통해 브랜치 접근권한을 변경하고,"),s("br"),t._v("\ncypress 테스트를 통해서 전체 테스트 코드중 comopnent 테스트를 실행하게 된다."),s("br"),t._v("\ncopmonent테스트에는 사전에 준비해야하는게 두 가지가 있다.")]),t._v(" "),s("p",[t._v("record 기능은 사용하지 않는다면 한 가지로 줄일 수 있다."),s("br"),t._v("\n레코드 기능을 사용한다면 dashboard를 통해 테스트 기록을 확인하고 해당 테스트가 어떻게 실패한지를 gui 기반으로 볼 수 있다.")]),t._v(" "),s("p",[s("code",[t._v("CYPRESS_RECORD_KEY")]),t._v("는 record기능을 사용하는데 필요한 기능으로써 "),s("code",[t._v("--record -k <record_key>")]),t._v("를 제거해서 record기능을 비활성화 할 수 있다."),s("br"),t._v("\ndashboard는 무료로 사용할 경우 최대 3명이 사용가능하다.")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/Devops/cypress.html"}},[t._v("cypress설정과 관련된 정리글")])],1),t._v(" "),s("p",[t._v("다음 설정해야 하는것은 cypress.json파일을 수정해주어야 한다."),s("br"),t._v("\ncomponent테스트를 위한 별도의 설정이 필요하고 unit(component) 테스트 파일의 경로나 spec 파일의 확장자 등을 설정할 수 있다.")]),t._v(" "),s("p",[s("code",[t._v("cypress.json")]),t._v("에 정상적인 테스트 경로를 구성했다면, 해당 workflow를 통해서 통합 테스트를 진행한 결과를 볼 수 있다.")]),t._v(" "),s("h2",{attrs:{id:"actions를-docker-build-구성"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#actions를-docker-build-구성"}},[t._v("#")]),t._v(" actions를 Docker build 구성")]),t._v(" "),s("p",[t._v("github action은 PR 발생시에 두 가지 정보를 가지고 동작하게 된다.")]),t._v(" "),s("ul",[s("li",[t._v("현재 PR을 요청한 commit")]),t._v(" "),s("li",[t._v("PR을 요청 받은 branch")])]),t._v(" "),s("p",[t._v("요청 받은 branch에 workflow가 있거나 요청한 commit에 workflow가 있다면 실행되는 것을 통해 알 수 있다."),s("br"),t._v("\npush를 하게 되면, push된 code, 이전 branch의 상태를 기준으로 동작한다.")]),t._v(" "),s("p",[s("code",[t._v("ations")]),t._v("안에서의 "),s("code",[t._v(".")]),t._v(" 경로는 현재 commit의 root directory인 것이다."),s("br"),t._v("\nbuild를 하기위한 "),s("code",[t._v("Dockerfile")]),t._v("을 "),s("code",[t._v("root directory")]),t._v("에 생성한다.")]),t._v(" "),s("div",{staticClass:"language-docker extra-class"},[s("pre",{pre:!0,attrs:{class:"language-docker"}},[s("code",[s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" node:16 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" Builder")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" npm install -g npm@8.1.3")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Create Directory")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" mkdir /usr/src/app")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WORKDIR")]),t._v(" /usr/src/app")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" package*.json /usr/src/app/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" . /usr/src/app")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" npm install")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" npm run build")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CMD")]),t._v(" ["),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npm"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"run"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"start"')]),t._v("]")]),t._v("\n")])])]),s("p",[t._v("빌드하는데 사용하는 npm버전이 달라 "),s("code",[t._v("error가")]),t._v(" 발생해 "),s("code",[t._v("npm")]),t._v(" 버전을 변경하는 "),s("code",[t._v("script를")]),t._v(" 가장 먼저 실행해 주었다.\n이후 작업할 "),s("code",[t._v("directory를")]),t._v(" 생성하고 "),s("code",[t._v("cd")]),t._v("와 같은 역할을 하는 "),s("code",[t._v("WORKDIR")]),t._v("로 작업 경로를 변경한다.")]),t._v(" "),s("p",[t._v("이후, "),s("code",[t._v("package*.json")]),t._v("을 COPY해 docker의 작업 dir로 복사한다.\n현재 root dir에 있는 모든 작업 파일을 docker의 작업 경로에 복사한다.")]),t._v(" "),s("p",[s("code",[t._v("npm i")]),t._v(", "),s("code",[t._v("npm run build")]),t._v("를 통해서 패키지를 설치하고, 빌드를 진행한다.")]),t._v(" "),s("p",[s("code",[t._v("이제 docker build . -t <tagname>")]),t._v("을 root directory에서 실행하면 docker image를 생성할 수 있다.")]),t._v(" "),s("p",[t._v("생성된 docker image를 docker hub에 올려 deploy에 사용할 수 있다.")]),t._v(" "),s("h2",{attrs:{id:"docker-hub-image로-배포-진행하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-hub-image로-배포-진행하기"}},[t._v("#")]),t._v(" docker hub image로 배포 진행하기")]),t._v(" "),s("p",[t._v("해당 과정은 github-actions를 이용해 진행할 수 있다.\nCI/CD 전략에 따른 배포 단계는 dev / release로 나눌 수 있다.")]),t._v(" "),s("p",[t._v("PR이 dev에 Merge될 때,"),s("br"),t._v("\ndev를 빌드하고, 배포하도록 되어있다.")]),t._v(" "),s("p",[t._v("이 단계를 구성해보면,\npr이 merge되는 event에 대한 workflow를 생성한다.")]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev server deployment\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Checkout\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/checkout@v2\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Install NPM dependencies, cache them correctly")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# and run all Cypress tests")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Set up Docker Buildx\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" buildx\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" docker/setup"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("buildx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("action@v1\n\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Login to Docker Hub\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" docker/login"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("action@v1\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.DOCKER_USERNAME "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.DOCKER_ACCESS_TOKEN "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Docker build & Push\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" docker_build\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" docker/build"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("push"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("action@v2\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("context")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ./\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ./Dockerfile\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tags")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.DOCKER_USERNAME "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.DOCKER_IMAGE "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" github.run_id "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.DOCKER_USERNAME "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.DOCKER_IMAGE "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("latest\n\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Image digest\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" echo $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" steps.docker_build.outputs.digest "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deployment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The type of runner that the job will run on")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("needs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" build\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Steps represent a sequence of tasks that will be executed as part of the job")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" executing remote ssh commands using password\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" appleboy/ssh"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("action@master\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.HOST "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.USERNAME "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.SSHKEY "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("passphrase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.PASSPHRASES "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE}}:latest\n            docker stop nextjs\n            docker run --rm --name nextjs -dp 80:3000 ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE}}:latest")]),t._v("\n")])])]),s("blockquote",[s("p",[s("code",[t._v("secrets")]),t._v("은 repository setting에서 설정할 수 있습니다.")])]),t._v(" "),s("p",[t._v("현재는 단순히 docker image를 받아아와 외부 포트 80과 연결해주는 방식을 사용하도록 구성했습니다.")]),t._v(" "),s("p",[t._v("각각의 jobs은 서로 다른 computing환경을 가지고 있어 docker에 push, pull 권한이 필요한 이미지인 경우 login을 꼭 진행해야 합니다.")]),t._v(" "),s("p",[s("code",[t._v("docker/login-action@v1")]),t._v("을 통해 docker hub에 접속할 수 있는 login을 할 수 있습니다.")]),t._v(" "),s("p",[t._v("이후, deploy과정은 직접 cloud computer에 ssh로 접속해 docker image를 내려받고 container를 교체하는 방식으로 구성되어 있습니다.")]),t._v(" "),s("p",[t._v("container를 교체하는 순간에는 서비스 장애가 발생할 수 있는 여지가 있어, 이후 개발서버를 nginx와 함께 배포하여 무중단 배포를 적용할 계획입니다.")])])}),[],!1,null,null,null);s.default=e.exports}}]);