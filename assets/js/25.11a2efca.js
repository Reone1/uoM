(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{322:function(t,s,a){"use strict";a.r(s);var n=a(14),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"mongodb-for-sql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mongodb-for-sql"}},[t._v("#")]),t._v(" mongodb for SQL")]),t._v(" "),s("blockquote",[s("p",[t._v("해당 컨텐츠는 mongodb university에서 교육하는 자료를 토대로 작성하였습니다.")])]),t._v(" "),s("h2",{attrs:{id:"mongodb-schema를-구성하는-방법"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mongodb-schema를-구성하는-방법"}},[t._v("#")]),t._v(" mongodb schema를 구성하는 방법")]),t._v(" "),s("p",[t._v("database를 구성하는 3가지 요소를 알아보고 해당 요소를 구성하는데 꼭 필요한 사항들을 정리한다.")]),t._v(" "),s("p",[t._v("database model은 여러가지 방법이 있다. conceptual model, logical model, physical model등이 있다. RDBMS의 경우 ER")]),t._v(" "),s("p",[t._v("mongo database는 workload, relationships, patterns의 3가지 요소를 가지고 schema를 구성한다.")]),t._v(" "),s("p",[s("strong",[t._v("workload")]),t._v("는 size data, quantity ops, quality ops등으로 이루어져 있으며, 실제 어떠한 기능에 필요한 데이터인지를 기준으로 생성한다고 볼 수 있다.\n현재 데이터가 어떤 기능을 기준으로 사용되며 읽고 쓰는데 어떻게 이용되는지를 정한다.")]),t._v(" "),s("p",[s("strong",[t._v("relationships")]),t._v("은 데이터 간의 관계 one-to-one, one-to-many, many-to-many등의 데이터간 관계에 따른 정리를 하고, embed document, reference document등의 document연결관계를 설정한다.")]),t._v(" "),s("p",[s("strong",[t._v("pattern")]),t._v("은 데이터 모델의 패턴을 결정하며, 효과적인 검색과 입력을 위한 효율적인 pattern을 구성하는 역할을 한다.")]),t._v(" "),s("h2",{attrs:{id:"workload"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#workload"}},[t._v("#")]),t._v(" workload")]),t._v(" "),s("p",[t._v("workload는 기능에 대한 database의 역할을 정하는 방법이며, workload는 크게 세가지 지표를 통해 나타내게 된다.")]),t._v(" "),s("p",[s("code",[t._v("query")]),t._v(", "),s("code",[t._v("quantification")]),t._v(", "),s("code",[t._v("qualitification")]),t._v("으로 나타나며,")]),t._v(" "),s("p",[s("code",[t._v("query")]),t._v("는 실제 서비서에서의 어떤 기능을 하게되는지를 나타낸다.")]),t._v(" "),s("p",[s("code",[t._v("quantification")]),t._v("은 해당 query를 실행하는데 사용하는 cost를 지표화 한다. 1/sec , 115 write/sec 등의 시간당 처리량을 나타낸다.")]),t._v(" "),s("p",[s("code",[t._v("quanlification")]),t._v("은 해당 query를 처리하는데 걸리는 시간을 나타내며 추가로 처리 우선순위를 정하여 조금 더 효율적으로 처리할 수 있도록 추가한다. <1s, <60s등으로 나타낸다.")]),t._v(" "),s("p",[t._v("이외의 추가적인 지표는 size, life/duration등이 있다.")]),t._v(" "),s("h2",{attrs:{id:"schema-validation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#schema-validation"}},[t._v("#")]),t._v(" schema validation")]),t._v(" "),s("p",[t._v("json Schema를 통해서 validation설정을 해줄 수 있다.")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"$jsonSchema"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"bsonType"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"object"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"properties"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"username"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"bsonType"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"string"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"fullname"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"bsonType"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"string"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"email"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"bsonType"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"string"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"pattern"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^[a-zA-Z0-9_.+-]+@[a-zA-z0-9-]+.[a-zA-Z0-9-.]+$"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"password"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"bsonType"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"string"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"age"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"bsonType"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"init"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"minimum"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"maximum"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("150")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"required"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"username"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fullname"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"password"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"emai"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"age"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"sharding"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sharding"}},[t._v("#")]),t._v(" sharding")]),t._v(" "),s("p",[t._v("데이터 베이스를 일정한 기준에 따라서 나누어 indexing을 하는 방식, 매우 많은 데이터를 관리해야하는 경우 조회하는데 오랜 시간이 걸릴 수 있으니, sharding을 통해서 조회 효율을 높이는게 가능하다.")]),t._v(" "),s("h2",{attrs:{id:"data-integrity"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#data-integrity"}},[t._v("#")]),t._v(" data integrity")]),t._v(" "),s("p",[t._v("데이터 무결성을 보장하는 방법, document를 embed 방식으로 data를 연결하여 무결성을 확보할 수 있다.")])])}),[],!1,null,null,null);s.default=r.exports}}]);